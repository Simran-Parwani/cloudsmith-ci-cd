name: Promote Python Package

on:
  repository_dispatch:
    types: [SYNCED,PING]

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
  CLOUDSMITH_STAGING_REPO: 'staging'
  CLOUDSMITH_PRODUCTION_REPO: 'production'
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_NAME: 'example_package'

permissions:
  contents: read
  actions: write
  repository-projects: write
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.1
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Debug Webhook Payload
        run: |
          echo "Webhook Payload:"
          echo '${{ toJson(github.event.client_payload) }}' | jq .

      - name: Extract package version from webhook
        run: |
          PACKAGE_VERSION="${{ github.event.client_payload.package_version }}"
          if [ -z "$PACKAGE_VERSION" ]; then
            echo "Package version is missing from webhook payload!"
            exit 1
          fi
          echo "Package version received: $PACKAGE_VERSION"
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

      - name: Tag Package as Ready for Production
        run: |
          echo "Tagging package as ready-for-production..."
          cloudsmith pkg update ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/${PACKAGE_NAME}-${PACKAGE_VERSION} --tags ready-for-production

      - name: Get Package Identifier and Promote
        run: |
          PACKAGE_QUERY="tags:ready-for-production filename:${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.gz"
          echo "Searching for package with query: $PACKAGE_QUERY"
          
          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} -q "$PACKAGE_QUERY" -F json)
          
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[] | .identifier_perm')

          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" = "null" ]; then
            echo "Failed to find package identifier with tag ready-for-production"
            exit 1
          fi
          
          echo "Found package identifier: $IDENTIFIER"
          
          echo "Promoting package to production..."
          cloudsmith mv --yes \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER \
            ${{ env.CLOUDSMITH_PRODUCTION_REPO }}
        shell: bash
